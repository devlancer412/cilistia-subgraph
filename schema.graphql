type AppVariable @entity(immutable: false) {
  id: ID! # name
  value: BigInt! # value
}

type CILHolder @entity(immutable: false) {
  id: Bytes! # address
  balance: BigInt! # uint256
  stakedAmount: BigInt! # uint256
  lockedAmount: BigInt! # uint256
  totalStakedAmount: BigInt! # uint256
  totalRewardAmount: BigInt! # uint256
  totalSaleAmount: BigInt! # uint256
  totalBuyAmount: BigInt! # uint256
  openedPositionAmount: BigInt! # uint256
  openedOfferAmount: BigInt! # uint256
  blocked: Boolean! # true => blocked account

  stakeHistories: [StakeHistory!]! @derivedFrom(field: "user")
  unStakeHistories: [UnStakeHistory!]! @derivedFrom(field: "user")
  
  positions: [Position!]! @derivedFrom(field: "creator")
  buyOffers: [Offer!]! @derivedFrom(field: "buyer")
  sellOffers: [Offer!]! @derivedFrom(field: "seller")
}

type StakeHistory @entity(immutable: true) {
  id: Bytes!
  user: CILHolder! # address
  stakedAmount: BigInt! # uint256
  lockedAmount: BigInt! # uint256
  blockTimestamp: BigInt!
}

type UnStakeHistory @entity(immutable: true) {
  id: Bytes!
  user: CILHolder! # address
  rewardAmount: BigInt! # uint256
  blockTimestamp: BigInt!
}

type Offer @entity(immutable: false) {
  id: Bytes! # bytes32
  status: OfferStatus!
  position: Position! # bytes32
  amount: BigInt! # uint128
  seller: CILHolder! # address
  buyer: CILHolder! # address
  terms: String! # string
  blockTimestamp: BigInt!
}

type Position @entity(immutable: false) {
  id: Bytes! # bytes32
  price: BigInt! # uint128
  amount: BigInt! # uint128
  offeredAmount: BigInt! # uint128
  minAmount: BigInt! # uint128
  maxAmount: BigInt! # uint128
  priceType: Boolean! # bool
  paymentMethod: Int! # uint8
  token: Bytes! # address
  creator: CILHolder! # address
  terms: String! # string
  blockTimestamp: BigInt!

  offers: [Offer!]! @derivedFrom(field: "position")
}

enum OfferStatus {
  Pending,
  Released,
  Canceled
}

